Ultma 4 Quest of the Avatar Randomizer

I.  Motivation
Dragon Warrior randomizer is one of the most fun and popular randomizers out right now, as winning it is more about strategy and planning rather than pure execution.  However, what if there were a game with many more search spots, virtually no grinding necessary, and a little bit of first-person dungeon crawling goodness?  In Ultima 4: Quest of the Avatar, you are always in go mode.  This game is about efficient movement to all the places you need to go, with a little bit of risk-reward along the way.



II.  Recommended Tournament settings
Ultima 4 Randomizer has the ability to create various levels of difficulty for tournament players.  For all levels of difficulty, it is recommended to set DOBTAWP0R3C6V4I2.  This randomizes the dungeons, moongate orders, spell teachers, enemy AIs, shop locations, items at search spots (including the avatar sword and armor), and starting items.  It also starts you off as the Avatar and adds 150 gold to each chest with gold.  For the following difficulty levels, also set the following flags:

Beginner: Also set the Y8 flag to shorten the Abyss.  Estimated completion time: 1h30m-2h.

Intermediate:  Also set the E5 flag for tougher enemies.  Estimated completion time: 2h30m-4h.

Advanced:  Also set the M9 flag for a randomized overworld map, and change to Y6 and E7.  Estimated completion time: 4h-6h.

Finalist: Omit the V4, Y6, and B flags, forcing you to attain Avatarhood yourself.  Estimated completion time: 5h30m-8h.

Feel free to also experiment with Abyss lengths, the R flag, the P flag, the Q flag, the G flag, the H flag, and the S flag.  It is not recommended to mix S and E flags.



III. Features and Usage
This is a Java application that requires having a copy of the NES Ultima 4 ROM.  If you use the UI it will list the flags that the randomizer will use as you select options.  A # following the flag means that the flag can be followed up with more options (the default is 1).  The following flags determine what to randomize and feature:

M#:  Randomize overworld map.  Begins with a sea border equal to 5 times # on each side of the map, effectively shrinking the map.  (For reference, the original map had a sea border of around 10 tiles on each side). See the map generation notes for more information.

D:  Randomize dungeon layouts.  Each dungeon has 8 floors and the randomizer only randomizes floors 2-7 of each dungeon *except* Hythloth, which remains the same. That is, floors 2-7 of each dungeon except Hythloth are shuffled and assigned to the other dungeons.  For example Deceit could be Deceit B1, Covetous B4, Destard B7, Shame B6, Deceit B3, Wrong B4, Despise B2, and Deceit B8.  Stairs are added and removed to get to each part of the dungeon as needed. 

N:  Randomize dungeon encounter rooms.  A dungeon encounter room is a mandatory battle in a dungeon.  Mandatory encounters are randomly selected from a pool of rooms that have the same exits (for example, a room with east and west exits will be replaced with a random room with east and west exits).  The pool contains selected rooms from the Abyss.  None of the Abyss rooms are changed by this flag.

F:  Randomize encounter room enemies.  The number of enemies in an encounter room will not change but the enemies will be randomized.  None of the encounter rooms in the Abyss are changed by this flag.

O:  Randomize moongate exit locations.  For example, new moons can go to Jhelom instead of Moonglow.  Note that using this flag is likely to change the order of towns you see in the Gate spell menu; this is to ensure that the Gate spell actually sends you to the destination you specify.

B:  Move the balloon to Castle Britannia.  The balloon location is reset every time you leave Castle Britannia rather than leaving Hythloth.  This flag was inspired by Final Fantasy Free Enterprise.

T:  Randomize spells taught by spell teaching villagers.  Any villager with text that gives you a spell has its text randomly swapped with text of another villager that gives you a spell.

A:  Randomize enemy skills.  There are 14 enemy skill sets in the game; this flag sets each enemy to get a random skill set.  Note: The 2nd to last fight in the Abyss has limitations on enemy skills; they cannot use set 6 (25% sleep), set 8 (25% negate), or set 12 (sleep missile attack), and at most 1 can have set 13 (12.5% fire, 6.25% tremor, 6.25% sleep).

W:  Modify the View spell.  Rather than simply being a functional copy of the Gem (which is cheaper than the spell's ingredients), the modified View spell counts the number of chests and number of stones not collected on each floor of the dungeon you are in and gives that information to the player.  It is no longer castable on the world map.  It is designed to greatly assist players who have gone out of their way to find Fungus, as this spell still requires Fungus and Manroot. 

Z:  Modify map size by shrinking the overworld map to a 128x128 area instead of a 256x256 area.  This will modify the M# flag to only generate 3 times # the water tiles on each side. Note that there is a bug at the edge of the world map that causes your sprite to disappear when its location's X or Y >= 8.  Just call it the "fog" effect (I don't know how to fix this).  New in 1.5.2: If this flag is set, the map will be randomized (so as to not use the default 256x256 map when the game is expecting a 128x128 map).

U:  Useful runes.  Useful runes puts a set of staircases in each shrine that leads to the following locations:  If Humility, the staircase goes to the Abyss (you will need avatarhood to use this staircase of course); if Spirituality, the staircase goes to Hythloth (the same location as Castle Britannia's staircase to Hythloth), and for each other virtue, the staircase goes directly to the stone room in the dungeon of the given virtue (Honesty to Blue Stone, Compassion to Yellow stone, etc.).

K:  Turn off random encounters.  Only turns off random encounters on the overworld; does not turn off random encounters in dungeons.

Y#: Shorter Abyss.  Start the abyss at floor #.  Valid values are 1-8.  You will start in the same location as though you were entering that floor from the floor above in a normal run.

P#:  Randomize shop locations.  The # is treated as follows:
0:  Shuffle shop locations.  Each shop is randomly placed within the shops on the map.  Any shop can be anything, and there can be more than one of the same type of shop within cities.  For example, Jhelom can have the Trinsic Weapon shop as well as the Britain Weapon shop.
1:  Enforce a non-compete clause.  Each shop is randomly placed but no town has 2 of the same type of shop.
2:  Preseve shop types.  Each shop is randomly placed but the type of each shop is preserved.  Thus an armor shop can be any armor shop, but it will be an armor shop.
Note: Option 0 is the most likely to yield a "jet seed", as Buccaneer's Den has 4 shops and the non-compete clause requires one Guild shop to be there.

E#: Tough enemies.  A tough enemy has its HP, attack, and defense tripled, and gives 5 times the experience.  There are 41 enemies in this game.  The # is a bit field with values treated as follows:
1: Make 25% of the enemies tough (10 enemies become tough).
2: Make 50% of the enemies tough (20 enemies become tough).  Options 1 and 2 can be combined to make 75% (30) of the enemies tough.
4: Make all dungeon-only enemies tough.  The dungeon-only enemies are the Bat, the Gremlin, the Mimic, the Reaper, the Slime, the Spider, and the 8 enemies in the 2nd to last fight in the Abyss.
Note: Enemy HP, attack, and exp are capped at 255 while defense is capped at 192.  Enemies with skill set 12 (Gazer AI) have ther attack and defense only doubled (for balance reasons).  (I highly recommend trying the Abyss with Tough Enemies; the 2nd to last room feels like a real challenge)
8: Make all enemies tough.

R#: Randomize items in search locations.  The # in this flag is treated as a bit field.  The values are interpreted as follows:
0:  Randomize items in search locations, not including the Avatar only chests in Lyceaum and Empath Abbey.
1:  Also exlude the Fungus and Manroot search spots on the map.  (This option is still recommended as you are required to go through a lengthy clue chain to get either location, and you need the sextant to actually find them).
2:  Include the Sword of Paradise and Exotic Armor in search spots.  If this flag is set, any Rune is excluded from being placed in the Lyceaum and Empath Abbey Avatar-only search spots.
4:  Switch the Sword of Paradise and Exotic Armor for a random sword and armor, respectively.
Note: This flag also eliminates the new moons check on the new moons search spot (that contains the black stone of Humility) as that check was tied to the item itself rather than the search spot; you can therefore check the new moons moongate search spot at anytime and get the item
8:  Randomize locations of all items, including the stones.  Note that this will make it so that the modified View spell will NOT be able to locate stone rooms that do not have stones.  This flag can only be set with 1 for a max value of 9.

C#:  Boost values of gold chests.  Adds 25 times # to each gold chest you open, up to a maximum of adding 150 gold.

V#: Randomize initial virtue. The # means the following: 0=set all virtues to 0, 1=set all virtues to the same random number between 0 and 99, 2=Randomize all virtue values, 3=set all virtues to 99.  4=start off as the avatar.  Use V3 or v4 to avoid all that virtue grinding.

G#: Randomize initial gold.  The # means the following: 0=set initial gold to 0, 1=set it to a random number between 0 and 400, 2=set it to a random number between 0 and 1000.  In ver. 1.31 this also sets how much gold you get upon dying.

Q#:  Randomize equippable weapons and armor for each character.  Each piece of equipment has an 8-bit value designating who can use that piece of equipment.  The # means the following: 1=Shuffle the character(s) who can use the equipment (shift any 1s to a random value; for example the Robe can only be used by the Shepherd and setting this flag makes the Robe usable by exactly one random class).  2=Pure randomization of this number (it is possible for any equipment to be used by any combination of characters).

I#:  Randomize initial equipment for each character.  Each character gets 1 weapon and 1 piece of armor.  The # means the following: 1=shuffle existing starting equipment, 2=have each character start with a random weapon and a random armor (does not give Avatar-only equipment).

Additional note: Using either I or Q sets character inital equipment to be unequipped.

H#:  Randomize starting herbs.  The # means the following: 1=shuffle initial herb counts, which start off at 8,8,9,7,8,4,0,and 0.  2=get a random amount from 0 to 9 of each herb.

S#:  Randomize initial starting spells.  This is treated as a bit field with the values as follows:
1:  Randomize initially known spells.  This flag does not grant any spells that could be learned from Spells Unlimited; it is meant as a challenge to take away spells.  The Wind spell is unaffected by this flag (you will always have it).
2:  Remove the Heal spell from the game.
4:  Remove the Blink spell from the game.



IV.  Notes on map generation
I didn't know what to put here so I decided to simply describe the map generation algorithm at the end.  Just note that the algorithm is slightly biased toward placing things on the sea, as a lot of things are reqired to be there, and that the game uses visibility zones to control what is visible as you traverse the map.  The abyss is always on a crater, and the map has a maximum of three accessible craters to check. Currently, no attempt is made to place shrines and dungeons closest to their corresponding virtue towns, so anything can be anywhere.  Also, I have not yet changed using visibility zone 2 for forests, which I have noticed can cause problems when restoring visibility.




V.  Future Development
The following flags are things that I would like to implement, and are an open discussion to see what changes could be made to the game for a more engaging experience.
Also, the current version doesn't change the closing credits in any way to acknowledge that roms are generated via a randomizer.  Furthermore, I am not sure about how gems and the Telesope work on the overworld map (but they should work fine in dungeons).
Realistically, this version (1.31) will be the difinitive version for a while.  I need to spend my time on other things and time developing this will drop a lot (unless major bugs are found).

- Additional stability (rolling a seed still has a chance of failing)

- Elimination of busywork, such as needing to complete clue chains for search locations and needing to visit Spells Unlimited. (It's still up in the air about how possible this will be)

- Chaos mode (randomization of prices as well as many other things)

This list seems chopped down from previous versions of the FAQ because it is.  Again, time I spend developing this will drop significanly once major bugs have been eliminated.

The following features could be implemented given sufficent time and demand:

- Replacing Hawkwind with a character select (will take about 2-3 weeks)

- Making the telescope and gems work outside (will take about 2 weeks)

These features will probably take the most time as they require additional familiarity with the PPU and require that I edit game graphics.

 
Addendum 1.  The Map Generation Algorithm
Notes: 
-X..Y means random number between X and Y, inclusive
-The effective map is the area of the map not contained by the sea border

In ver. 1.1:
Begin with a sea border on each side whose size is specified by the value on the M flag.  Version 1.3 injects some randomness into the sea border to make for less square map edges.

The map is generated by designating 9..15 zones on the effective map (boxes with length and width 30..50 each that don't overlap) that can be plains, forest, mountain, or sea.  The first 7 are automatically designated as 3 sea, 2 plains, 1 forest and 1 mountain.  Any remaining ones are randomized, with distribution of 50% sea, 25% plains, 15% forest and 10% mountain.  These zones spread via floodfill, with a 15% chance to overtake land already claimed by another zone or the sea border.  

Then, anywhere from 50..75 features are randomly placed on the effective map, where each feature is a box with with and height 12..30 each that may overlap at most 1 other feature.  For each feature you place, determine if it is dominantly on land or sea, and place a required feature or a random feature.  Sea required features are the horn island, the bell dive spot, and the skull dive spot (these cannot overlap any other features).  Land required features are 2 shrubs, 8 river deltas, 3 mountains, 3 swamps, and 1 lake.  All other feautures are random, and can be shrubs, forests, mountains, swamps, or lakes if on land, and islands, archipelagos, shoals, and volcanic islands if on sea.  Each feature is assigned the zone it is on.

After that the map is smoothed, which adds in shrub around the forests, plateus around the mountains, and shallow water around the islands and continents.  The three sea search spots are then re-placed just in case any of them were deformed during the smoothing process.

Now we palce points of interest (POI).  All POI are given a rectangle that no other POI can land on to ensure that nothing gets overwritten.

Place the abyss, which must be on a volcanic island and must be placed on the map's center diagonal line (any place on the line x = y; the devs compared both the x and y to the same value in the original code).  Find each volcanic island and get the crater spots on them.  While there are more than 3 crater spots, replace one of them with lava. Finally select one of them as the Abyss.  If there are no crater spots then one is created and made the abyss.

Place the 8 virtuous towns.  The 8 Vituous towns are placed on either a non-mountain zone or feature.  These features attempt to not be the same feature as another vituous town.  2 of them must be placed on islands.  Place the town and surround it with a box of plains tiles.

Place the 8 moongates, each in a small knight's move away from the virtuous towns.  Partition the box from the moongate to the town into 2..4 random smaller boxes and fill each small box with plains or shrub.  Surround the moongate with four plains.

Place the 8 dungeons.  Each dungeon must be on a mountain feature, an island, a volcanic island, or on a feature on a mountain zone.  Select a mountain on that feature and replace it with the dungeon, then surround it with 3 mountain spots and an opening (which has a good chance to be poison marsh).

Place the 8 shrines.  Shrines can be on practically any feature, even shoals.  Place the shrine and a random 3-box corner of shrub or plains on the map, except for the Srine of Humility, which gets special treatment*.

Place the castles.  The 4 castles can be on any forest or plains zone.  Find a sea anchor for the zone via floodfill and move the castle in a small knight's move away from that anchor.  make it a 4x4 area with plains and the 4 castle spots (castle W, castle E and the 2 castle flags) in the center.

Place the other towns.  These have the same rules as placing viruous towns.  The first 2 of them require sea anchors.

Now ensure access to each location via floodfill checks.  Each location needs access to a virtuous town, with moongates requiring walk access and each other location reqiring walk or sea access.  Ensure access by drawing a line from the edge of the inwardly accessible tile to the nearest openly accessable tile. Two dungeons do not require walk or sea access and are instead given balloon access (a 2x2 area of plains in a spot that is walk accessible to the dungeon).

Place the whirlpool on any deep-sea spot.

Place the balloon in a small knight's move away from any dungeon opening, first selecting any dungeon that has only balloon access.  The dungeon next to the ballon will become Hythloth.

Finally, assign visibility zones to each tile.  In the original game, the first 2 bits of a tile corresponded to a visibility zone, allowing for up to 4 zones of visibility as you traversed the map.  Starting at 0,0, floodfill visibility until you get to a mountain or forest tile (inclusively).  If you find a deep-sea tile you are on the main branch (0), otherwise you are assigned zone 1.  Forests are assigned zone 2 and Mountains are assigned zone 3.

Next, identify branches in the main branch that go into mountains.  Find small, thin areas that branch off of the main branch and assign them to zone 1.  (Note: the algorithm that does this isn't extensively tested so don't expect perfection here).

The final step is to convert each tile into its proper corresponding tile in the game.  Plains, shrubs, plateau and water tiles all have corresponding corners and sides so those are calculated for output to the final map.  Note: this is not perfect, as I do not take into account the very few 3-sided and 4-sided permutations of corners.  However, the original game wasn't perfect with this either.

*The Shrine of Humility begins blocked by a 5 mountains in a ring on the south edge and 3 spike tiles on its north edge.  If opening access requires a change to this, the north side is blocked by a mountain and the game notes the new opening to place spike tiles at.
